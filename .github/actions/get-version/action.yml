name: Get project version
inputs:
  file:
    description: path to .csproj
    required: true
  xpath:
    description: XPath to version element
    required: false
    default: '//PropertyGroup/Version'
  regex:
    description: ECMAScript Regular Expression to parse the version string for verification
    required: false
    default: '^(?<major>0|[1-9]\\d*)\\.(?<minor>0|[1-9]\\d*)(\\.(?<patch>0|[1-9]\\d*))?(?:-(?<prerelease>(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+(?<buildmetadata>[0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$'
outputs:
  version:
    description: version retrieved from inputs.file
    value: ${{ steps.get.outputs.version }}
runs:
  using: composite
  steps:
  - id: get
    name: Get project version from ${{ inputs.file }}
    shell: bash
    run: |-
      csproj-version get --xpath ${{ inputs.xpath }} --regex ${{ inputs.regex }} ${{ inputs.file }}
      echo "version=$(csproj-version get --xpath ${{ inputs.xpath }} --regex ${{ inputs.regex }} ${{ inputs.file }})" >> $GITHUB_OUTPUT
  - shell: bash
    run: |-
      echo ${{ steps.get.outputs.version }}
